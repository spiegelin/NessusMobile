// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  user_id      Int       @id @default(autoincrement())
  username     String    @unique
  email        String    @unique
  password_hash String
  created_at   DateTime  @default(now())
  last_login   DateTime?
  roles        UserRoles[]
  scans        Scan[]
  reports      Report[]
  logs         Log[]
}

model Role {
  role_id   Int       @id @default(autoincrement())
  role_name String    @unique
  users     UserRoles[]
}

model UserRoles {
  user_id User @relation(fields: [userId], references: [user_id])
  role_id Role @relation(fields: [roleId], references: [role_id])

  userId Int
  roleId Int

  @@id([userId, roleId])
}

model Scan {
  scan_id    Int       @id @default(autoincrement())
  url_or_ip  String
  scan_type  ScanType
  scan_date  DateTime  @default(now())
  user_id    Int
  report_id  Int?
  user       User      @relation(fields: [user_id], references: [user_id])
  report     Report?   @relation(fields: [report_id], references: [report_id])
  vulnerabilities ScanVulnerabilities[]
}

model Report {
  report_id Int       @id @default(autoincrement())
  user_id   Int
  summary   String
  created_at DateTime @default(now())
  user      User      @relation(fields: [user_id], references: [user_id])
  scans     Scan[]
}

model Vulnerability {
  vulnerability_id Int       @id @default(autoincrement())
  cve              String    @unique
  description      String
  cvss_score       Float
  scans            ScanVulnerabilities[]
}

model ScanVulnerabilities {
  scan_id          Int
  vulnerability_id Int
  recommendation   String

  scan            Scan         @relation(fields: [scan_id], references: [scan_id])
  vulnerability   Vulnerability @relation(fields: [vulnerability_id], references: [vulnerability_id])

  @@id([scan_id, vulnerability_id])
}

model Log {
  log_id   Int       @id @default(autoincrement())
  user_id  Int
  action   String
  timestamp DateTime @default(now())
  user     User      @relation(fields: [user_id], references: [user_id])
}

enum ScanType {
  passive
  active
}

